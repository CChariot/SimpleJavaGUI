/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package databaseconnector;


import java.sql.*;

/**
 *
 * @author Lihan Zhan
 */
public class TableGeneration {
    
    //This method just creates the tables
    static void createTables(Connection con) throws Exception
    {
        PreparedStatement s;
        
        //creating students table using SQL script.
        //check constraint is added to restrict the type of data that can be entered in the database
        s = con.prepareStatement("create table Students(studentID int not null primary key , first_name varchar(50) , last_name varchar(50) , sex varchar(1) check (sex in ('M' , 'F')));");
        s.execute();
        
        //creating courses table
        s = con.prepareStatement("create table Courses(courseID int not null primary key auto_increment , courseTitle varchar(50) , department varchar(50));");
        s.execute();
        
        //creating classes table
        //check is a constraint which is added to restrict the type of data that can be entered in the database
        //Here the studentID should be unique and hence unique keyword is applied ot studentID field. The studentID should not be repeated in this table
        s = con.prepareStatement("create table Classes(classCode int not null auto_increment primary key , courseID int references Courses(courseID) , studentID int unique references Students(studentID) , year int , semester varchar(10) check (semester in ('FALL' , 'SPRING' , 'SUMMER' , 'WINTER')), GPA varchar(1) check (GPA in ('A' , 'B' , 'C' , 'D' , 'F' , 'W')));");
        s.execute();
    }
    
    //This method is used for entering data into the students table
    static void studentsInfo(Connection con) throws Exception
    {
        PreparedStatement s1;
        String insertion;
              
        insertion = "insert into students(studentID, first_name , last_name , sex) values('23364902' , 'LIHAN' , 'ZHAN <-- ME' , 'M')";
        s1 = con.prepareStatement(insertion);
        s1.executeUpdate();
        
        insertion = "insert into students(studentID, first_name , last_name , sex) values('23364959' , 'JOHN' , 'TAN' , 'M')";
        s1 = con.prepareStatement(insertion);
        s1.executeUpdate();
        
        insertion = "insert into students(studentID, first_name , last_name , sex) values('23364906' , 'CHEN' , 'HONG' , 'F')";
        s1 = con.prepareStatement(insertion);
        s1.executeUpdate();
        
        insertion = "insert into students(studentID, first_name , last_name , sex) values('2336' ,'    KOBE' , 'Bryant     ' , 'M')";
        s1 = con.prepareStatement(insertion);
        s1.executeUpdate();
        
        insertion = "insert into students(studentID, first_name , last_name , sex) values('23364908' ,'AJAY' , 'PATEL' , 'M')";
        s1 = con.prepareStatement(insertion);
        s1.executeUpdate();
        
        insertion = "insert into students(studentID, first_name , last_name , sex) values('23364909' ,'RUDY' , 'ROY' , 'F')";
        s1 = con.prepareStatement(insertion);
        s1.executeUpdate();
        
        insertion = "insert into students(studentID, first_name , last_name , sex) values('23364910' ,'JOSH' , 'HART' , 'F')";
        s1 = con.prepareStatement(insertion);
        s1.executeUpdate();
        
        insertion = "insert into students(studentID, first_name , last_name , sex) values('2335' ,'    LEBRON' , 'JAMES      ' , 'M')";
        s1 = con.prepareStatement(insertion);
        s1.executeUpdate();
        
        insertion = "insert into students(studentID, first_name , last_name , sex) values('23364915' ,'PRIYA' , 'PATEL' , 'M')";
        s1 = con.prepareStatement(insertion);
        s1.executeUpdate();
    }
    
    //This method is used for entering data in the courses table
    static void coursesTable(Connection con) throws Exception 
    {
        PreparedStatement s;
        String insertion;
        
        insertion = "insert into courses(courseTitle , department) values('CS211' , 'CS');";
        s = con.prepareStatement(insertion);
        s.executeUpdate();
        
        insertion = "insert into courses(courseTitle , department) values('CS222' , 'CS');";
        s = con.prepareStatement(insertion);
        s.executeUpdate();
        
        insertion = "insert into courses(courseTitle , department) values('ME311' , 'ME');";
        s = con.prepareStatement(insertion);
        s.executeUpdate();
        
        insertion = "insert into courses(courseTitle , department) values('EE332' , 'EE');";
        s = con.prepareStatement(insertion);
        s.executeUpdate();
        
        insertion = "insert into courses(courseTitle , department) values('CE221' , 'CE');";
        s = con.prepareStatement(insertion);
        s.executeUpdate();
        
        insertion = "insert into courses(courseTitle , department) values('ME233' , 'ME');";
        s = con.prepareStatement(insertion);
        s.executeUpdate();
        
        insertion = "insert into courses(courseTitle , department) values('EE322' , 'EE');";
        s = con.prepareStatement(insertion);
        s.executeUpdate();
    }
    
    //This method is used for entering data in the classes table
    static void classesTable(Connection con) throws Exception
    {
        String insertion;
        PreparedStatement s;
        
        insertion = "insert into classes(courseID , studentID , year , semester , GPA) values(1 , 23364902 , 2019 , 'FALL' , 'A')";
        s = con.prepareStatement(insertion);
        s.executeUpdate();
        
        insertion = "insert into classes(courseID , studentID , year , semester , GPA) values(3 , 23364959 , 2018 , 'SPRING' , 'B')";
        s = con.prepareStatement(insertion);
        s.executeUpdate();
        
        insertion = "insert into classes(courseID , studentID , year , semester , GPA) values(1 , 23364906 , 2019 , 'SUMMER' , 'C')";
        s = con.prepareStatement(insertion);
        s.executeUpdate();
        
        insertion = "insert into classes(courseID , studentID , year , semester , GPA) values(1 , 2336 , 2019 , 'FALL' , 'A')";
        s = con.prepareStatement(insertion);
        s.executeUpdate();
        
        insertion = "insert into classes(courseID , studentID , year , semester , GPA) values(6 , 23364908 , 2017 , 'FALL' , 'W')";
        s = con.prepareStatement(insertion);
        s.executeUpdate();
        
        insertion = "insert into classes(courseID , studentID , year , semester , GPA) values(1 , 23364909 , 2017 , 'SUMMER' , 'D')";
        s = con.prepareStatement(insertion);
        s.executeUpdate();
        
        insertion = "insert into classes(courseID , studentID , year , semester , GPA) values(4 , 23364910 , 2016 , 'SPRING' , 'B')";
        s = con.prepareStatement(insertion);
        s.executeUpdate();
        
        insertion = "insert into classes(courseID , studentID , year , semester , GPA) values(1 , 2335 , 2019 , 'FALL' , 'F')";
        s = con.prepareStatement(insertion);
        s.executeUpdate();
        
        insertion = "insert into classes(courseID , studentID , year , semester , GPA) values(7 , 23364915 , 2018 , 'SUMMER' , 'W')";
        s = con.prepareStatement(insertion);
        s.executeUpdate();
    }
    
}
